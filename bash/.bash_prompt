## Filename: ~/.bash_prompt
#
# Makes a fancy bash prompt with git status (if available)
#
# Save this file as ~/.bash_prompt and include it on the bottom of your ~/.bashrc: 
# [[ -f "~/.bash_prompt" ]] && . "~/.bash_prompt"
 
# color definitions
BLACK='\[\033[0;30m\]' 	
RED='\[\033[0;31m\]'
GREEN='\[\033[0;32m\]' 
YELLOW='\[\033[0;33m\]' 
BLUE='\[\033[0;34m\]' 
PURPLE='\[\033[0;35m\]' 	
CYAN='\[\033[0;36m\]' 	
WHITE='\[\033[0;37m\]' 	
RESET='\[\033[00m\]'

# bold colors
BBLACK='\[\033[1;30m\]' 	
BRED='\[\033[1;31m\]'
BGREEN='\[\033[1;32m\]' 
BYELLOW='\[\033[1;33m\]' 
BBLUE='\[\033[1;34m\]' 
BPURPLE='\[\033[1;35m\]' 	
BCYAN='\[\033[1;36m\]' 	
BWHITE='\[\033[1;37m\]' 	

# Username color should be white except for root
USERCOLOR=${GREEN}
[[ ${UID} == 0 ]] && USERCOLOR=${RED}
HOSTNAMECOLOR=${BLUE}
PATHCOLOR=${PURPLE}

# prompt variables
# you can also use system varibles like ${USER}, ${HOSTNAME} etc...
FULLPATH='\w' # Full path to current directory
DIRECTORY='\W' # Name of current directory

# set variable identifying the chroot you work in
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot="$(cat /etc/debian_chroot) "
fi

function git_branch() {
    BRANCH=""
    BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/' | sed -e 's/(HEAD detached //' | sed -e 's/)//' | sed -e 's/at//' | sed -e 's/from//'`
    echo "$BRANCH"
}

function git_git () {
    GIT=""
    # [[ ! `git_branch` == "" ]] && GIT="git"
    echo "$GIT"
}

function git_bits() {
    BITS=""
    if [ ! `git_branch` == "" ]; then
        STATUS=`git status 2>&1 | tee`
        DIRTY=`echo -n "${STATUS}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
        UNTRACKED=`echo -n "${STATUS}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
        AHEAD=`echo -n "${STATUS}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
        NEWFILE=`echo -n "${STATUS}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
        RENAMED=`echo -n "${STATUS}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
        DELETED=`echo -n "${STATUS}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
        if [ "${RENAMED}" == "0" ]; then
            BITS=">${BITS}"
        fi
        if [ "${AHEAD}" == "0" ]; then
            BITS="*${BITS}"
        fi
        if [ "${NEWFILE}" == "0" ]; then
            BITS="+${BITS}"
        fi
        if [ "${UNTRACKED}" == "0" ]; then
            BITS="?${BITS}"
        fi
        if [ "${DELETED}" == "0" ]; then
            BITS="x${BITS}"
        fi
        if [ "${DIRTY}" == "0" ]; then
            BITS="!${BITS}"
        fi
        [[ ! ${BITS} == "" ]] && BITS=" ${BITS}"
        BITS="${BITS} "
    fi
    echo "$BITS"
}

function git_colon () {
    COLON=""
    [[ ! `git_bits` == "" ]] && COLON=":"
    echo "$COLON"
}

# prompt the prompt
export PS1="${debian_chroot:+($debian_chroot)}${USERCOLOR}${USER}${WHITE}@${HOSTNAMECOLOR}${HOSTNAME}${WHITE}:${PATHCOLOR}${FULLPATH} ${YELLOW}\`git_branch\`${RED}\`git_bits\`${WHITE}> ${RESET}"
